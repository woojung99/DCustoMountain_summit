# Generated by Django 5.1.6 on 2025-02-24 07:34

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("community", "0004_remove_comment_created_remove_post_created_and_more"),
        ("mountains", "0001_initial"),
        ("users", "0001_initial"),
    ]

    operations = [
        migrations.AddField(
            model_name="user",
            name="block_flag",
            field=models.BooleanField(default=False, verbose_name="정지된 사용자"),
        ),
        migrations.AddField(
            model_name="user",
            name="comment_posts",
            field=models.ManyToManyField(
                blank=True,
                related_name="comment_users",
                to="community.post",
                verbose_name="댓글 단 Post 목록",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="experienced_mountains",
            field=models.ManyToManyField(
                blank=True,
                related_name="experienced_users",
                to="mountains.mountain",
                verbose_name="등산해 본 Mountain 목록",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="like_posts",
            field=models.ManyToManyField(
                blank=True,
                related_name="like_users",
                to="community.post",
                verbose_name="좋아요 누른 Post 목록",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="report_count",
            field=models.PositiveIntegerField(default=0, verbose_name="신고 횟수"),
        ),
        migrations.AddField(
            model_name="user",
            name="save_posts",
            field=models.ManyToManyField(
                blank=True,
                related_name="save_users",
                to="community.post",
                verbose_name="저장한 Post 목록",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="wish_mountains",
            field=models.ManyToManyField(
                blank=True,
                related_name="wish_users",
                to="mountains.mountain",
                verbose_name="등산해 보고 싶은 Mountain 목록",
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="profile_image",
            field=models.ImageField(
                blank=True, upload_to="users/profile", verbose_name="프로필 이미지"
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="short_description",
            field=models.TextField(blank=True, verbose_name="소개글"),
        ),
        migrations.CreateModel(
            name="Relationship",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                (
                    "from_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="following_relationships",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="팔로우를 요청한 사용자",
                    ),
                ),
                (
                    "to_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="follower_relationships",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="팔로우 요청의 대상",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="user",
            name="following",
            field=models.ManyToManyField(
                related_name="followers",
                through="users.Relationship",
                to=settings.AUTH_USER_MODEL,
                verbose_name="팔로우 중인 사용자들",
            ),
        ),
    ]
